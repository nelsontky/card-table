[{"/home/nelson/projects/card-table/src/App.tsx":"1","/home/nelson/projects/card-table/src/index.tsx":"2","/home/nelson/projects/card-table/src/components/HandZone.tsx":"3","/home/nelson/projects/card-table/src/components/PlayZone.tsx":"4","/home/nelson/projects/card-table/src/lib/utils.ts":"5","/home/nelson/projects/card-table/src/interfaces.ts":"6","/home/nelson/projects/card-table/src/components/CardComponent.tsx":"7","/home/nelson/projects/card-table/src/slices/gameSlice.ts":"8","/home/nelson/projects/card-table/src/store.ts":"9","/home/nelson/projects/card-table/src/components/CardMenu.tsx":"10","/home/nelson/projects/card-table/src/components/ClosableBackdrop.tsx":"11","/home/nelson/projects/card-table/src/components/DeckZone.tsx":"12","/home/nelson/projects/card-table/src/lib/hooks.ts":"13","/home/nelson/projects/card-table/src/pages/Home.tsx":"14","/home/nelson/projects/card-table/src/pages/Game.tsx":"15","/home/nelson/projects/card-table/src/slices/playerIdSlice.ts":"16","/home/nelson/projects/card-table/src/lib/peer.ts":"17"},{"size":354,"mtime":1609210028810,"results":"18","hashOfConfig":"19"},{"size":1169,"mtime":1609209739220,"results":"20","hashOfConfig":"19"},{"size":2813,"mtime":1609249998643,"results":"21","hashOfConfig":"19"},{"size":3892,"mtime":1609249514633,"results":"22","hashOfConfig":"19"},{"size":1928,"mtime":1609254912153,"results":"23","hashOfConfig":"19"},{"size":270,"mtime":1609001188323,"results":"24","hashOfConfig":"19"},{"size":3593,"mtime":1609253798043,"results":"25","hashOfConfig":"19"},{"size":2625,"mtime":1609243273773,"results":"26","hashOfConfig":"19"},{"size":260,"mtime":1609211394670,"results":"27","hashOfConfig":"19"},{"size":3614,"mtime":1609243347823,"results":"28","hashOfConfig":"19"},{"size":1073,"mtime":1609139337661,"results":"29","hashOfConfig":"19"},{"size":2515,"mtime":1609254974543,"results":"30","hashOfConfig":"19"},{"size":369,"mtime":1609239750583,"results":"31","hashOfConfig":"19"},{"size":2538,"mtime":1609220115660,"results":"32","hashOfConfig":"19"},{"size":3137,"mtime":1609254143923,"results":"33","hashOfConfig":"19"},{"size":317,"mtime":1609240121123,"results":"34","hashOfConfig":"19"},{"size":1569,"mtime":1609257855363,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i0lle",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nelson/projects/card-table/src/App.tsx",[],"/home/nelson/projects/card-table/src/index.tsx",[],"/home/nelson/projects/card-table/src/components/HandZone.tsx",[],["72","73"],"/home/nelson/projects/card-table/src/components/PlayZone.tsx",[],"/home/nelson/projects/card-table/src/lib/utils.ts",["74"],"/home/nelson/projects/card-table/src/interfaces.ts",[],"/home/nelson/projects/card-table/src/components/CardComponent.tsx",["75"],"/home/nelson/projects/card-table/src/slices/gameSlice.ts",[],"/home/nelson/projects/card-table/src/store.ts",[],"/home/nelson/projects/card-table/src/components/CardMenu.tsx",[],"/home/nelson/projects/card-table/src/components/ClosableBackdrop.tsx",[],"/home/nelson/projects/card-table/src/components/DeckZone.tsx",["76"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport shuffle from \"lodash/shuffle\";\nimport clsx from \"clsx\";\n\nimport { Card } from \"../interfaces\";\nimport CardComponent from \"../components/CardComponent\";\nimport { set, remove } from \"../slices/gameSlice\";\nimport { createDeck } from \"../lib/utils\";\n\nconst buttons = [\"Shuffle\"];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: () => ({\n      width: \"100%\",\n      borderStyle: \"solid\",\n      borderColor: \"white\",\n      padding: theme.spacing(1),\n    }),\n  })\n);\n\nexport default function DeckZone({\n  playerId,\n  ...rest\n}: {\n  playerId: number;\n  [x: string]: any;\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const deck: Card[] = useSelector((state: any) => state.game[playerId].deck);\n\n  const myPlayerId = useSelector((state: any) => state.playerId);\n  const isMine = myPlayerId === playerId;\n\n  const handleClick = (button: string) => {\n    switch (button) {\n      case \"Shuffle\":\n        dispatch(set({ playerId, section: \"deck\", cards: shuffle(deck) }));\n        break;\n      default:\n      // TODO throw error here\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(\n      set({\n        playerId,\n        section: \"deck\",\n        cards: createDeck({\n          deckName: myPlayerId === 0 ? \"dragonicForce\" : \"ninjaOnslaught\",\n          ownerId: playerId,\n        }),\n      })\n    );\n  }, [dispatch]);\n\n  if (deck.length <= 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <Typography variant=\"caption\">Deck</Typography>\n      <Grid container className={clsx(classes.root, rest.className)}>\n        <Grid item md={6} xs={12}>\n          <CardComponent\n            noDrag={!isMine}\n            disableActions\n            dropCb={() => {\n              dispatch(remove({ playerId, section: \"deck\", card: deck[0] }));\n            }}\n            source={\"deck\"}\n            card={deck[0]}\n          />\n        </Grid>\n        {isMine && (\n          <Grid item container md={6} xs={12}>\n            {buttons.map((button, i) => (\n              <Grid key={\"deck-button\" + i} item>\n                <Button onClick={() => handleClick(button)}>{button}</Button>\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Grid>\n    </>\n  );\n}\n","/home/nelson/projects/card-table/src/lib/hooks.ts",[],"/home/nelson/projects/card-table/src/pages/Home.tsx",["77"],"/home/nelson/projects/card-table/src/pages/Game.tsx",["78","79","80"],"/home/nelson/projects/card-table/src/slices/playerIdSlice.ts",[],"/home/nelson/projects/card-table/src/lib/peer.ts",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":13},{"ruleId":"85","severity":1,"message":"89","line":8,"column":26,"nodeType":"87","messageId":"88","endLine":8,"endColumn":34},{"ruleId":"90","severity":1,"message":"91","line":63,"column":6,"nodeType":"92","endLine":63,"endColumn":16,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"94","line":14,"column":10,"nodeType":"87","messageId":"88","endLine":14,"endColumn":17},{"ruleId":"85","severity":1,"message":"95","line":11,"column":10,"nodeType":"87","messageId":"88","endLine":11,"endColumn":13},{"ruleId":"85","severity":1,"message":"96","line":11,"column":15,"nodeType":"87","messageId":"88","endLine":11,"endColumn":21},{"ruleId":"90","severity":1,"message":"97","line":70,"column":6,"nodeType":"92","endLine":70,"endColumn":8,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'DragItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'myPlayerId' and 'playerId'. Either include them or remove the dependency array.","ArrayExpression",["101"],"'getPeer' is defined but never used.","'set' is defined but never used.","'remove' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'id', and 'isHost'. Either include them or remove the dependency array.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [dispatch, myPlayerId, playerId]",{"range":"107","text":"108"},"Update the dependencies array to be: [dispatch, id, isHost]",{"range":"109","text":"110"},[1656,1666],"[dispatch, myPlayerId, playerId]",[2029,2031],"[dispatch, id, isHost]"]